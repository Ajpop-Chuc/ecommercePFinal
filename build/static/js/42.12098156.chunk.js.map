{"version":3,"sources":["firebase/index.js","routes/admin-panel/invoices/components/ConfirmationBox.js","routes/admin-panel/invoices/components/InvoicePopup.js","routes/admin-panel/invoices/index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ConfirmationBox","state","open","this","setState","isTrue","props","onConfirm","Dialog","onClose","closeDialog","bind","DialogContent","className","DialogActions","Button","onClick","onCloseDialog","autoFocus","React","Component","InvoicePopup","handleClickOpen","id","src","require","default","alt","Grid","container","spacing","item","xs","sm","md","lg","CurrencyIcon","width","Divider","Table","columns","data","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","nextPage","pageCount","previousPage","setPageSize","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","type","disabled","length","value","onChange","e","Number","target","InvoiceList","name","invoiceList","searchClientText","allUserInvoice","handleChange","event","confirmationDialog","createRef","getInvoiceData","database","ref","on","snapshot","val","searchText","searchClients","filter","invoice","toLowerCase","buyer","indexOf","toUpperCase","current","openDialog","popupResponse","deleteItem","newData","invoiceListItem","maxWidth","Header","accessor","sortable","minWidth","Cell","onDeleteCartItem","original","TextField","label","fullWidth","onSearchClient","res","deleteCartItem","ContentLoader"],"mappings":"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","file":"static/js/42.12098156.chunk.js","sourcesContent":["/**\n * Firebase Data\n * embryo comes with built in firebase database features\n * You Need To Add Your Firsebase App Account Details Here\n */\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyBXyGS6LdNauzj-nn4ItKNV0tTFSm9lYuI\",\n\tauthDomain: \"embryo-react-29ecb.firebaseapp.com\",\n\tdatabaseURL: \"https://embryo-react-29ecb.firebaseio.com\",\n\tprojectId: \"embryo-react-29ecb\",\n\tstorageBucket: \"embryo-react-29ecb.appspot.com\",\n\tmessagingSenderId: \"118413959528\",\n\tappId: \"1:118413959528:web:2e99d374df424af2e636dd\",\n\tmeasurementId: \"G-K3MWJBBM6T\"\n };\n // Initialize Firebase\n firebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","/**\n * Confirmation dialog component\n*/\n/* eslint-disable */\nimport React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\n\nclass ConfirmationBox extends React.Component {\n   state = {\n      open: false,\n   };\n\n   //Define function for open confirmation dialog box\n   openDialog() {\n      this.setState({ open: true });\n   };\n   //Define function for close confirmation dialog box\n   closeDialog() {\n      this.setState({ open: false });\n   };\n   //Define function for close confirmation dialog box and callback for delete item \n   onCloseDialog(isTrue) {\n      this.setState({ open: false });\n      this.props.onConfirm(isTrue)\n   };\n\n   render() {\n\n      return (\n         <Dialog\n            open={this.state.open}\n            onClose={this.closeDialog.bind(this)}\n            aria-labelledby=\"responsive-dialog-title\"\n         >\n            <DialogContent className=\"p-20 text-center\">\n               <h5 className=\"pt-sm-20 mb-0\">Are you sure you want to delete this invoice permanently?</h5>\n            </DialogContent>\n            <DialogActions className=\"px-20 pb-20 pt-sm-15 justify-content-center\">\n\n               <Button onClick={() => this.onCloseDialog(true)} className=\"button btn-active mr-15\">\n                  yes\n               </Button>\n               <Button onClick={() => this.onCloseDialog(false)} className=\"button btn-active mr-15\" autoFocus>\n                  no\n               </Button>\n            </DialogActions>\n         </Dialog >\n      );\n   }\n}\n\nexport default ConfirmationBox;","//Invoice popup\n/* eslint-disable */\nimport React, { Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport CurrencyIcon from '../../../../components/global/currency/CurrencyIcon';\n\nclass InvoicePopup extends React.Component {\n   state = {\n      open: false,\n   };\n\n   //Define function for open confirmation dialog box\n   handleClickOpen = () => {\n      this.setState({\n         open: true,\n      });\n   };\n\n   //Define function for close confirmation dialog box and callback for delete item \n   closeDialog() {\n      this.setState({ open: false });\n   };\n\n   render() {\n\n      return (\n         <Fragment>\n            <Button\n               className=\"action-btn\"\n               onClick={this.handleClickOpen}\n            >\n               <i className=\"material-icons primary-color\">remove_red_eye</i>\n            </Button>\n            <Dialog\n               className=\"admin-invoice-wrap\"\n               open={this.state.open}\n               onClose={() => this.closeDialog()}\n               aria-labelledby=\"responsive-dialog-title\"\n            >\n               <DialogContent className=\"p-20 text-center\">\n                  <div className=\"iron-invoice-wrap bg-base\">\n                     <div id=\"payment-receipt\">\n                        <div className=\"text-center bg-secondary px-sm-50 px-15 py-sm-50 py-20\">\n                           <h4 className=\"mb-sm-20 mb-10\">Payment Status</h4>\n                           <h5 className=\"mb-sm-25 mb-10\">Payment is successfully processsed and your order delivred</h5>\n                           <h6 className=\"mb-sm-25 mb-10\">Transaction ID:267676GHERT105467</h6>\n                           <img\n                              src={require(\"../../../../assets/images/checked.png\").default} alt=\"success\"\n                           />\n                        </div>\n                        <div className=\"p-sm-30 p-15\">\n                           <div className=\"pt-sm-20 pb-sm-40 pb-15\">\n                              <Grid container spacing={0}>\n                                 <Grid item xs={12} sm={6} md={6} lg={6} >\n                                    <div className=\"mb-md-0 mb-20 text-left\">\n                                       <h6>Summary</h6>\n                                       <p className=\"mb-5\">Order ID: 2563883628932</p>\n                                       <p className=\"mb-5\">Order Date: April 9, 2019 </p>\n                                       <p className=\"mb-5\">Order Total: <CurrencyIcon /> 888.00</p>\n                                    </div>\n                                 </Grid>\n                                 <Grid item xs={12} sm={6} md={6} lg={6} >\n                                    <div className=\"text-sm-right text-left\">\n                                       <h6>Ship To</h6>\n                                       <p className=\"mb-5 text-capitalize\">\n                                          Nitin Goyal\n                                    </p>\n                                       <p className=\"mb-5 text-capitalize\">Hyderabad</p>\n                                       <p className=\"mb-5 text-capitalize\">India-500 002</p>\n                                       <p className=\"mb-5 text-capitalize\">Contact No. 202-555-0185</p>\n                                    </div>\n                                 </Grid>\n                              </Grid>\n                           </div>\n                           <div className=\"py-25 px-15  text-center bg-secondary mb-sm-50 mb-30\">\n                              <h4 className=\"mb-sm-15 mb-0\">Expected Date of Delivery</h4>\n                              <h3 className=\"mb-sm-15 mb-0\">April 30, 2019</h3>\n                           </div>\n                           <div>\n                              <h4 className=\"pt-5\">Your Ordered Details</h4>\n                              <Grid container spacing={3} className=\"my-0\">\n                                 <Grid item xs={12} sm={12} md={3} lg={3} className=\"py-0  d-flex justify-content-center align-items-center mb-md-0 mb-20\">\n                                    <img\n                                       src={require('../../../../assets/images/gadgets/g-2-b.jpg').default}\n                                       alt='cart-item'\n                                       width=\"100\"\n                                    />\n                                 </Grid>\n                                 <Grid item xs={6} sm={6} md={3} lg={3} className=\"py-0 d-flex justify-content-center align-items-center\" >\n                                    <div className=\"text-center\">\n                                       <h6 className=\"mb-5\">Product Name</h6>\n                                       <p className=\"mb-sm-0 mb-15 font-bold text-capitalize\">Black Smartphone</p>\n                                    </div>\n                                 </Grid>\n                                 <Grid item xs={6} sm={6} md={3} lg={3} className=\"py-0 d-flex justify-content-center align-items-center\" >\n                                    <div className=\"text-center\">\n                                       <h6 className=\"mb-5\">Quantity</h6>\n                                       <p className=\"mb-0\">1</p>\n                                    </div>\n                                 </Grid>\n                                 <Grid item xs={12} sm={12} md={3} lg={3} className=\"py-0 d-flex justify-content-center align-items-center\" >\n                                    <div className=\"text-center\">\n                                       <h6 className=\"mb-5\">price</h6>\n                                       <p className=\"mb-0\"><CurrencyIcon /> 847.63</p>\n                                    </div>\n                                 </Grid>\n                              </Grid>\n                              <Divider className=\"my-20\" />\n                           </div>\n                           <div>\n                              <Grid container spacing={0}>\n                                 <Grid item xs={12} sm={12} md={12} lg={12} className=\"pt-10\" >\n                                    <div className=\"d-flex justify-content-between align-items-center mb-15\">\n                                       <span className=\"d-inline-block text-capitalize text-14\">subtotal\n                                                        </span>\n                                       <span className=\" text-14\"><CurrencyIcon /> 847.63 </span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between align-items-center mb-15\">\n                                       <span className=\"d-inline-block text-capitalize text-14\">Shipping\n                                                        </span>\n                                       <span className=\" text-14\"><CurrencyIcon /> 12.95</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                       <span className=\"d-inline-block text-capitalize text-14\">Tax(GST)\n                                                        </span>\n                                       <span className=\" text-14\"><CurrencyIcon /> 27.95</span>\n                                    </div>\n                                    <Divider className=\"my-sm-30 my-15\"></Divider>\n                                    <div className=\"d-flex justify-content-between align-items-center mb-sm-50 mb-0\">\n                                       <h4>Total</h4>\n                                       <h4><CurrencyIcon /> 888.53</h4>\n                                    </div>\n                                 </Grid>\n                              </Grid>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"p-sm-30 p-15 d-sm-flex justify-content-between align-items-center\">\n                        <Button className=\"button btn-active btn-lg mb-20 mr-20\">download PDF</Button>\n                        <Button className=\"button btn-active btn-lg  mb-20 \">go to home</Button>\n                     </div>\n                  </div>\n               </DialogContent>\n            </Dialog >\n         </Fragment>\n      );\n   }\n}\n\nexport default InvoicePopup;","/**\n * Invoices List\n */\n/* eslint-disable */\nimport React, { Component, Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { useTable, usePagination } from 'react-table'\n//firebase\nimport firebase from '../../../firebase';\n//component\nimport ContentLoader from '../../../components/global/loaders/ContentLoader';\nimport ConfirmationBox from './components/ConfirmationBox';\nimport InvoicePopup from './components/InvoicePopup';\n\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    usePagination\n  )\n\n  // Render the UI for your table\n  return (\n    <div className=\"ReactTable\">\n      <table {...getTableProps()} className=\"rt-table\">\n        <thead className=\"rt-thead -header\">\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()} className=\"rt-th\"> {column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()} className=\"rt-tbody\">\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()} className=\"rt-tr\">\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()} className=\"rt-td\">{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination-bottom\">\n         <div className=\"-pagination \">\n            <div className=\"-previous\">\n              <button className=\"-btn\" type=\"button\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                Previous\n              </button>\n            </div>\n            <div className=\"-center\">\n              <span className=\"-pageInfo\">\n                Page{' '}\n                <strong>\n                  {pageIndex + 1} of {pageOptions.length}\n                </strong>{' '}\n              </span>\n              <span className=\"select-wrap -pageSizeOptions\">\n                 <select\n                   value={pageSize}\n                   onChange={e => {\n                     setPageSize(Number(e.target.value))\n                   }}\n                 >\n                   {[10, 20, 30, 40, 50].map(pageSize => (\n                     <option key={pageSize} value={pageSize}>\n                       Show {pageSize}\n                     </option>\n                   ))}\n                 </select>\n               </span>\n            </div>\n            <div className=\"-next\"> \n               <button className=\"-btn\" type=\"button\" onClick={() => nextPage()} disabled={!canNextPage}>\n                  Next\n               </button>\n            </div>\n         </div>\n      </div>\n    </div>\n  )\n}\n\nclass InvoiceList extends Component {\n   constructor(props) {\n      super(props);\n      this.confirmationDialog = React.createRef();\n   }\n\n   state = {\n      name: '',\n      invoiceList: null,\n      searchClientText: '',\n   };\n\n   allUserInvoice = [];     //all clients data\n\n   handleChange = name => event => {\n      this.setState({ [name]: event.target.value });\n   };\n   componentDidMount() {\n      this.getInvoiceData();\n   }\n\n   //get invoice list\n   getInvoiceData() {\n      const invoiceListRef = firebase.database().ref('invoice_list');\n      invoiceListRef.on('value', (snapshot) => {\n         let invoiceList = snapshot.val();\n         this.setState({\n            invoiceList: invoiceList\n         });\n         this.allUserInvoice = invoiceList;\n      });\n   }\n   onSearchClient(searchText) {\n      if (searchText === '') {\n         this.setState({\n            ...this.state,\n            invoiceList: this.allUserInvoice,\n            searchClientText: searchText,\n         });\n      } else {\n         let searchClients = this.allUserInvoice.filter((invoice) => {\n            if (searchText === searchText.toLowerCase()) {\n               let buyer = invoice.buyer.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n               return (\n                  buyer\n               )\n            }\n            else {\n               let buyer = invoice.buyer.toUpperCase().indexOf(searchText.toUpperCase()) > -1\n               return (\n                  buyer\n               )\n            }\n         });\n         this.setState({\n            ...this.state,\n            searchClientText: searchText,\n            invoiceList: searchClients\n         })\n      }\n   }\n\n   onDeleteCartItem(data) {\n      this.data = data;\n      this.confirmationDialog.current.openDialog();\n   }\n\n   deleteCartItem(popupResponse) {\n      if (popupResponse) {\n         let deleteItem = this.data;\n         let newData = this.state.invoiceList.filter((invoiceListItem) => invoiceListItem.id !== deleteItem.id)\n         this.setState({\n            invoiceList: newData\n         })\n      }\n   }\n\n   render() {\n\n      const { invoiceList } = this.state;\n      const columns = [\n         {\n            maxWidth: 75,\n            Header: 'No.',\n            accessor: 'count'\n         },\n         {\n            sortable: false,\n            Header: 'Invoice Id',\n            accessor: 'id',\n\n         },\n         {\n            minWidth: 160,\n            Header: 'Buyer',\n            accessor: 'buyer',\n         },\n         {\n            Header: 'Date',\n            accessor: 'date',\n         },\n         {\n            Header: 'Price',\n            accessor: 'price',\n         },\n         {\n            Header: 'Payment',\n            accessor: 'payment_type',\n         },\n         {\n            Header: 'Status',\n            accessor: 'status',\n         },\n         {\n            Header: 'action',\n            accessor: 'action',\n            Cell: props => {\n               return (\n                  <div>\n                     <InvoicePopup />\n                     <Button\n                        className=\"action-btn\"\n                        onClick={() => this.onDeleteCartItem(props.row.original)}\n                     >\n                        <i className=\"material-icons active-color\">delete</i>\n                     </Button>\n                  </div>\n               )\n            },\n         }\n      ]\n      return (\n         <Fragment>\n            {invoiceList !== null ?\n               <div className=\"inner-container\">\n                  <div className=\"iron-invoice-list-wrap\">\n                     <div className=\"page-title mb-20\">\n                        <h4 className=\"mb-0\">Invoice List</h4>\n                     </div>\n                     <div className=\"iron-shadow rounded p-sm-20 p-15 mb-30 bg-base\">\n                        <Grid container spacing={3} className=\"my-0\">\n                           <Grid item xs={12} sm={12} md={6} lg={5} className=\"py-0 d-sm-flex d-block\">\n                              <TextField\n                                 label=\"Search Products\"\n                                 className=\"my-0 iron-form-input-wrap mr-5\"\n                                 fullWidth\n                                 value={this.state.searchClientText}\n                                 onChange={(e) => this.onSearchClient(e.target.value)}\n                              />\n                           </Grid>\n                        </Grid>\n                     </div>\n                     <div className=\"iron-shadow rounded p-20 bg-base\">\n                       \n                        <Table columns={columns} data={invoiceList} />\n\n                     </div>\n                  </div>\n                  <ConfirmationBox\n                     ref={this.confirmationDialog}\n                     onConfirm={(res) => this.deleteCartItem(res)}\n                  />\n               </div>\n               :\n               <ContentLoader />\n            }\n         </Fragment>\n      )\n   }\n}\n\nexport default InvoiceList;"],"sourceRoot":""}