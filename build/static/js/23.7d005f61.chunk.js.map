{"version":3,"sources":["firebase/index.js","routes/account/order-history/index.js","routes/account/profile/index.js","routes/account/address/index.js","routes/account/cards/index.js","routes/account/edit/components/EditCard.js","routes/account/edit/components/EditAddress.js","routes/account/edit/components/EditInfo.js","routes/account/edit/index.js","routes/account/index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","OrderHistory","props","state","orderHistory","this","getTableData","database","ref","on","snapshot","val","setState","className","map","orderItem","index","count","id","productName","price","status","action","React","Component","Profile","infoData","getProducts","info","title","value","component","Link","to","pathname","search","UserAddress","container","spacing","item","xs","sm","md","lg","xl","UserCards","EditCard","fields","errors","variations","month","year","type","e","target","formIsValid","match","field","preventDefault","handleValidation","alert","thumb","require","default","Grid","onSubmit","onCardSubmit","bind","TextField","label","error","onChange","handleChange","FormControl","InputLabel","Select","cardExpiryDate","inputProps","name","MenuItem","Button","style","backgroundImage","ContentLoader","EditAddress","onAddressSubmit","EditInfo","genderChange","event","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addUserFormSubmit","RadioGroup","FormControlLabel","control","Radio","defaultValue","InputLabelProps","shrink","refs","EditUser","location","Account","src","alt","icon","path","userdata","url","exact","from"],"mappings":"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","file":"static/js/23.7d005f61.chunk.js","sourcesContent":["/**\n * Firebase Data\n * embryo comes with built in firebase database features\n * You Need To Add Your Firsebase App Account Details Here\n */\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyBXyGS6LdNauzj-nn4ItKNV0tTFSm9lYuI\",\n\tauthDomain: \"embryo-react-29ecb.firebaseapp.com\",\n\tdatabaseURL: \"https://embryo-react-29ecb.firebaseio.com\",\n\tprojectId: \"embryo-react-29ecb\",\n\tstorageBucket: \"embryo-react-29ecb.appspot.com\",\n\tmessagingSenderId: \"118413959528\",\n\tappId: \"1:118413959528:web:2e99d374df424af2e636dd\",\n\tmeasurementId: \"G-K3MWJBBM6T\"\n };\n // Initialize Firebase\n firebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","/**\n * order history page\n */\nimport React, { Fragment } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n//firebase\nimport firebase from '../../../firebase';\n\n//component\nimport ContentLoader from '../../../components/global/loaders/ContentLoader';\n\nclass OrderHistory extends React.Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         orderHistory: null\n      }\n   }\n\n   componentDidMount() {\n      this.getTableData();\n   }\n\n   //get table data\n   getTableData() {\n      const orderHistoryRef = firebase.database().ref('order_history');\n      orderHistoryRef.on('value', (snapshot) => {\n         //console.log(snapshot.val())\n         let orderHistory = snapshot.val();\n         this.setState({\n            orderHistory: orderHistory\n         });\n      });\n   }\n\n   render() {\n      const { orderHistory } = this.state;\n      return (\n         <Fragment>\n            {orderHistory !== null ?\n               <div className=\"iron-table-wrapper\">\n                  <Table className=\"iron-table-wrap\">\n                     <TableHead>\n                        <TableRow>\n                           <TableCell className=\"iron-th\">no.</TableCell>\n                           <TableCell className=\"iron-th\">order Id</TableCell>\n                           <TableCell className=\"iron-th\">product name</TableCell>\n                           <TableCell className=\"iron-th\">price</TableCell>\n                           <TableCell className=\"iron-th\">status</TableCell>\n                           <TableCell className=\"iron-th\">action</TableCell>\n                        </TableRow>\n                     </TableHead>\n                     <TableBody>\n                        {orderHistory.map((orderItem, index) => {\n                           return (\n                              <TableRow key={index}>\n                                 <TableCell className=\"iron-td\">{orderItem.count}</TableCell>\n                                 <TableCell className=\"iron-td\">{orderItem.id}</TableCell>\n                                 <TableCell className=\"iron-td\">{orderItem.productName}</TableCell>\n                                 <TableCell className=\"iron-td\">{orderItem.price}</TableCell>\n                                 <TableCell className=\"iron-td\">{orderItem.status}</TableCell>\n                                 <TableCell className=\"iron-td\"><i className=\"material-icons\">{orderItem.action}</i></TableCell>\n                              </TableRow>\n                           );\n                        })}\n                     </TableBody>\n                  </Table>\n               </div>\n               :\n               <ContentLoader />\n            }\n         </Fragment>\n      )\n   }\n}\nexport default OrderHistory;","/**\n * user profile page\n */\nimport React, { Fragment } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom';\n\n//firebase\nimport firebase from '../../../firebase';\n\n//component\nimport ContentLoader from '../../../components/global/loaders/ContentLoader';\n\n\nexport default class Profile extends React.Component {\n\n   state = {\n      infoData: null\n   }\n\n   componentDidMount() {\n      this.getProducts();\n   }\n\n   //getproducts\n   getProducts() {\n      const infoDataRef = firebase.database().ref('user_info');\n      infoDataRef.on('value', (snapshot) => {\n         let infoData = snapshot.val();\n         this.setState({\n            infoData: infoData\n         });\n      });\n   }\n\n   render() {\n\n      const { infoData } = this.state;\n\n      return (\n         <Fragment>\n            {infoData !== null ?\n               <div className=\"profile-wrapper p-sm-15 py-5\">\n                  <h4 className=\"mb-30\">Profile Infomation</h4>\n                  <div>\n                     <ul className=\"user-basic-info\">\n                        {infoData.map((info, index) => {\n                           return (\n                              <li key={index} className=\"profile-field mb-15\">\n                                 <span>{info.title}</span>\n                                 <span>{info.value}</span>\n                              </li>\n                           )\n                        })}\n                     </ul>\n                     <Button\n                        component={Link}\n                        to={{ pathname: \"edit\", search: \"?type=info\" }}\n                        className=\"button btn-active\"\n                     >\n                        edit\n                        </Button>\n                  </div>\n               </div>\n               :\n               <ContentLoader />\n            }\n         </Fragment >\n      )\n   }\n\n}\n\n","/**\n * user address component\n */\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nexport default function UserAddress() {\n\n   return (\n      <div className=\"profile-wrapper\">\n         <h4>Address Infomation</h4>\n         <Grid container spacing={4} className=\"my-0\">\n            <Grid item xs={12} sm={6} md={6} lg={5} xl={4}>\n               <h5 className=\"mb-25\">Billing Address</h5>\n               <div>\n                  <address className=\"mb-25\">\n                     {' 2735 Sherman Street'}\n                     <br />\n                     {'Hodour Sheridan Plaza'}\n                     <br />\n                     {'New Jersey'}\n                     <br />\n                     {'Zip - 6739HG1'}\n                     <br />\n                     {'USA'}\n                  </address >\n                  <Button component={Link} to={{ pathname: \"edit\", search: \"?type=address\" }} className=\"button btn-active\">edit</Button>\n               </div >\n            </Grid>\n            <Grid item xs={12} sm={6} md={6} lg={5} xl={4}>\n               <h5 className=\"mb-25\">Shipping Address</h5>\n               <div>\n                  <address className=\"mb-25\">\n                     {' 2735 Sherman Street'}\n                     <br />\n                     {'Hodour Sheridan Plaza'}\n                     <br />\n                     {'New Jersey'}\n                     <br />\n                     {'Zip - 6739HG1'}\n                     <br />\n                     {'USA'}\n                  </address >\n                  <Button component={Link} to={{ pathname: \"edit\", search: \"?type=ship-address\" }} className=\"button btn-active\">edit</Button>\n               </div >\n            </Grid >\n         </Grid >\n      </div >\n   )\n}","/**\n * card detail\n */\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\n\n\nexport default function UserCards() {\n\n   return (\n      <div className=\"card-wrapper\">\n         <div className=\"d-sm-flex justify-content-between align-items-center card-title\">\n            <h4>Saved Card Infomation</h4>\n            <Button\n               component={Link}\n               to={{ pathname: \"edit\", search: \"?type=add-card\" }}\n               className=\"button btn-active mb-sm-0 mb-10\"\n            >\n               add new card\n                </Button>\n         </div>\n         <Grid container spacing={4} className=\"my-0\">\n            <Grid item xs={12} sm={12} md={6} lg={5} xl={5}>\n               <div className=\"iron-shadow p-15 rounded\">\n                  <h5>VISA -- Credit Card</h5>\n                  <div className=\"pt-15\">\n                     <div className=\"saved-card-box mb-25\">\n                        <span>4545 4XXX XXX5 4545</span>\n                     </div>\n                     <Button\n                        component={Link}\n                        to={{ pathname: \"edit\", search: \"?type=card\" }}\n                        className=\"button btn-active\"\n                     >\n                        edit\n                            </Button>\n                  </div>\n               </div>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6} lg={5} xl={5}>\n               <div className=\"iron-shadow p-15 rounded\">\n                  <h5>MasterCard -- Debit Card</h5>\n                  <div className=\"pt-15\">\n                     <div className=\"saved-card-box mb-25\">\n                        <span>8585 8XXX XXX5 8585</span>\n                     </div>\n                     <Button\n                        component={Link}\n                        to={{ pathname: \"edit\", search: \"?type=card\" }}\n                        className=\"button btn-active\"\n                     >\n                        edit\n                            </Button>\n                  </div>\n               </div>\n            </Grid>\n         </Grid>\n      </div>\n   )\n}","/**\n * edit card component\n */\nimport React, { Fragment } from 'react';\nimport { Grid, Button } from \"@material-ui/core\";\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ContentLoader from '../../../../components/global/loaders/ContentLoader';\n\n\nexport default class EditCard extends React.Component {\n\n   state = {\n      fields: {},\n      errors: {},\n      variations: {\n         month: '',\n         year: ''\n      }\n   };\n\n   /**\n    * function for card validity\n    */\n   cardExpiryDate(type, e) {\n      this.setState({\n         variations: {\n            ...this.state.variations,\n            [type]: e.target.value\n         }\n      })\n   }\n\n   /**\n    * define function for form validation\n    */\n   handleValidation() {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      //card No\n      if (!fields[\"cardNo\"]) {\n         formIsValid = false;\n         errors[\"cardNo\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"cardNo\"] !== \"undefined\") {\n         if (!fields[\"cardNo\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"cardNo\"] = \"Only letters\";\n         }\n      }\n\n      //cvv\n      if (!fields[\"cvv\"]) {\n         formIsValid = false;\n         errors[\"cvv\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"cvv\"] !== \"undefined\") {\n         if (!fields[\"cvv\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"cvv\"] = \"Only letters\";\n         }\n      }\n\n      //name on card\n      if (!fields[\"cardName\"]) {\n         formIsValid = false;\n         errors[\"cardName\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"cardName\"] !== \"undefined\") {\n         if (!fields[\"cardName\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"cardName\"] = \"Only letters\";\n         }\n      }\n      this.setState({ errors: errors });\n      return formIsValid;\n   }\n\n   //define Function for change input data\n   handleChange(field, e) {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({ fields });\n   }\n\n   //define function for submit form \n   onCardSubmit(e) {\n      e.preventDefault();\n      if (this.handleValidation()) {\n         // process \n         return true;\n      } else {\n         alert(\"Form has errors.\")\n      }\n   }\n\n   render() {\n\n      const thumb = require('../../../../assets/images/card-edit.png').default;\n      const { type } = this.props;\n\n      return (\n         <Fragment>\n            {type !== null ?\n               <div className=\"card-wrapper\">\n                  {type && type === '?type=card' ?\n                     <h4>Edit card Information</h4>\n                     :\n                     <h4>add card Information</h4>\n                  }\n                  <Grid container spacing={4}>\n                     <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <form onSubmit={this.onCardSubmit.bind(this)}>\n                           <Grid container spacing={4}>\n                              <Grid item xs={12} sm={6} md={6} lg={6}>\n                                 <TextField\n                                    id=\"\"\n                                    label=\"card number\"\n                                    className=\"iron-form-input-wrap\"\n                                    error={this.state.errors[\"cardNo\"]}\n                                    ref=\"cardNo\"\n                                    onChange={this.handleChange.bind(this, \"cardNo\")}\n                                    value={this.state.fields[\"cardNo\"]}\n                                 />\n                              </Grid>\n                              <Grid item xs={12} sm={6} md={6} lg={6}>\n                                 <TextField\n                                    id=\"\"\n                                    label=\"CVV\"\n                                    className=\"iron-form-input-wrap\"\n                                    error={this.state.errors[\"cvv\"]}\n                                    ref=\"cvv\"\n                                    onChange={this.handleChange.bind(this, \"cvv\")}\n                                    value={this.state.fields[\"cvv\"]}\n                                 />\n                              </Grid>\n                              <Grid item xs={12} sm={12} md={12} lg={12} className=\"pb-0\">\n                                 <TextField\n                                    id=\"\"\n                                    label=\"name on card\"\n                                    className=\"iron-form-input-wrap\"\n                                    error={this.state.errors[\"cardName\"]}\n                                    ref=\"cardName\"\n                                    onChange={this.handleChange.bind(this, \"cardName\")}\n                                    value={this.state.fields[\"cardName\"]}\n                                 />\n                              </Grid>\n                              <Grid item xs={12} sm={12} md={12} lg={12} className=\"mb-30\">\n                                 <span className=\"mb-15 d-block secondary-color text-14 font-normal text-capitalize\">expiry date</span>\n                                 <div className=\"d-lg-flex d-md-block d-sm-flex justify-content-start align-items-center mb-5\">\n                                    <div className=\"mr-15\">\n                                       <FormControl className=\"iron-select-width2\">\n                                          <InputLabel>month</InputLabel>\n                                          <Select\n                                             value={this.state.variations.month}\n                                             onChange={(e) => this.cardExpiryDate('month', e)}\n                                             inputProps={{\n                                                name: 'age',\n                                             }}\n                                          >\n                                             <MenuItem className=\"selector-link\" value={'January'}>January</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'february'}>february</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'march'}>march</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'april'}>april</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'may'}>may</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'june'}>june</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'July'}>July</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'august'}>august</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'september'}>september</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'october'}>october</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'november'}>november</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'december'}>december</MenuItem>\n                                          </Select>\n                                       </FormControl>\n                                    </div>\n                                    <div>\n                                       <FormControl className=\"iron-select-width2\" >\n                                          <InputLabel>year</InputLabel>\n                                          <Select\n                                             value={this.state.variations.year}\n                                             onChange={(e) => this.cardExpiryDate('year', e)}\n                                             inputProps={{\n                                                name: 'age',\n                                             }}\n                                          >\n                                             <MenuItem className=\"selector-link\" value={'2021'}>2021</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2023'}>2023</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2024'}>2024</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2025'}>2025</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2026'}>2026</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2027'}>2027</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2028'}>2028</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2029'}>2029</MenuItem>\n                                             <MenuItem className=\"selector-link\" value={'2030'}>2030</MenuItem>\n                                          </Select>\n                                       </FormControl>\n                                    </div>\n                                 </div>\n                              </Grid>\n                           </Grid>\n                           <Button type=\"submit\" className=\"button btn-active mb-15\">save</Button>\n                        </form>\n                     </Grid>\n                     <Grid item md={6} lg={6} className=\"edit-window-thumb\" style={{ backgroundImage: `url(${thumb})` }}>\n\n                     </Grid>\n                  </Grid>\n               </div>\n               :\n               <ContentLoader />\n            }\n         </Fragment>\n      )\n   }\n}","/**\n * edit address component\n */\nimport React, { Fragment } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\nimport ContentLoader from '../../../../components/global/loaders/ContentLoader';\n\n\nexport default class EditAddress extends React.Component {\n\n   state = {\n      fields: {},\n      errors: {}\n   };\n\n   /**\n    * define function for form validation\n    */\n   handleValidation() {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      //address\n      if (!fields[\"address\"]) {\n         formIsValid = false;\n         errors[\"address\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"address\"] !== \"undefined\") {\n         if (!fields[\"address\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"address\"] = \"Only letters\";\n         }\n      }\n\n      //building name\n      if (!fields[\"bname\"]) {\n         formIsValid = false;\n         errors[\"bname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"bname\"] !== \"undefined\") {\n         if (!fields[\"bname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"bname\"] = \"Only letters\";\n         }\n      }\n\n      //street\n      if (!fields[\"street\"]) {\n         formIsValid = false;\n         errors[\"street\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"street\"] !== \"undefined\") {\n         if (!fields[\"street\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"street\"] = \"Only letters\";\n         }\n      }\n\n      //state\n      if (!fields[\"state\"]) {\n         formIsValid = false;\n         errors[\"state\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"state\"] !== \"undefined\") {\n         if (!fields[\"state\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"state\"] = \"Only letters\";\n         }\n      }\n\n      //zip code\n      if (!fields[\"zipCode\"]) {\n         formIsValid = false;\n         errors[\"zipCode\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"zipCode\"] !== \"undefined\") {\n         if (!fields[\"zipCode\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"zipCode\"] = \"Only letters\";\n         }\n      }\n\n      //country\n      if (!fields[\"country\"]) {\n         formIsValid = false;\n         errors[\"country\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"country\"] !== \"undefined\") {\n         if (!fields[\"country\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"country\"] = \"Only letters\";\n         }\n      }\n\n      this.setState({ errors: errors });\n      return formIsValid;\n   }\n\n   //define Function for change input data\n   handleChange(field, e) {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({ fields });\n   }\n\n   //define function for submit form \n   onAddressSubmit(e) {\n      e.preventDefault();\n      if (this.handleValidation()) {\n         // process \n         return true;\n      } else {\n         alert(\"Form has errors.\")\n      }\n   }\n\n   render() {\n\n      const thumb = require('../../../../assets/images/billing-edit.png').default;\n      const { type } = this.props;\n\n      return (\n         <Fragment>\n            {type !== null ?\n               <div className=\"profile-wrapper\">\n                  {type && type === '?type=address' ?\n                     <h4>Edit billing Information</h4>\n                     :\n                     <h4>Edit shipping Information</h4>\n                  }\n                  <Grid container spacing={4}>\n                     <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <form onSubmit={this.onAddressSubmit.bind(this)}>\n                           <div>\n                              <TextField\n                                 label=\"address\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"address\"]}\n                                 ref=\"address\"\n                                 onChange={this.handleChange.bind(this, \"address\")}\n                                 value={this.state.fields[\"address\"]}\n                              />\n                              <TextField\n                                 label=\"building name\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"bname\"]}\n                                 ref=\"bname\"\n                                 onChange={this.handleChange.bind(this, \"bname\")}\n                                 value={this.state.fields[\"bname\"]}\n                              />\n                              <TextField\n                                 label=\"street no\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"street\"]}\n                                 ref=\"street\"\n                                 onChange={this.handleChange.bind(this, \"street\")}\n                                 value={this.state.fields[\"street\"]}\n                              />\n                              <TextField\n                                 label=\"state\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"state\"]}\n                                 ref=\"state\"\n                                 onChange={this.handleChange.bind(this, \"state\")}\n                                 value={this.state.fields[\"state\"]}\n                              />\n                              <TextField\n                                 label=\"zip code/pin code\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"zipCode\"]}\n                                 ref=\"zipCode\"\n                                 onChange={this.handleChange.bind(this, \"zipCode\")}\n                                 value={this.state.fields[\"zipCode\"]}\n                              />\n                              <TextField\n                                 label=\"country\"\n                                 className=\"iron-form-input-wrap\"\n                                 error={this.state.errors[\"country\"]}\n                                 ref=\"country\"\n                                 onChange={this.handleChange.bind(this, \"country\")}\n                                 value={this.state.fields[\"country\"]}\n                              />\n                           </div>\n                           <Button type=\"submit\" className=\"button btn-active mb-15\">save</Button>\n                        </form>\n                     </Grid>\n                     <Grid item md={6} lg={6} className=\"edit-window-thumb\" style={{ backgroundImage: `url(${thumb})` }}>\n                     </Grid>\n                  </Grid>\n               </div>\n               :\n               <ContentLoader />\n            }\n         </Fragment>\n      )\n   }\n}","/**\n * edit info component\n */\nimport React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { Grid, Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nclass EditInfo extends React.Component {\n\n   state = {\n      fields: {},\n      errors: {},\n      value: 'male'\n   };\n\n   /**\n    * define function for form validation\n   */\n   handleValidation() {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      //FirstName\n      if (!fields[\"fname\"]) {\n         formIsValid = false;\n         errors[\"fname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"fname\"] !== \"undefined\") {\n         if (!fields[\"fname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"fname\"] = \"Only letters\";\n         }\n      }\n      //LastName\n      if (!fields[\"lname\"]) {\n         formIsValid = false;\n         errors[\"lname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"lname\"] !== \"undefined\") {\n         if (!fields[\"lname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"lname\"] = \"Only letters\";\n         }\n      }\n      //mobile\n      if (!fields[\"mobile\"]) {\n         formIsValid = false;\n         errors[\"mobile\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"mobile\"] !== \"undefined\") {\n         if (!fields[\"mobile\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"mobile\"] = \"Only letters\";\n         }\n      }\n\n      //location\n      if (!fields[\"location\"]) {\n         formIsValid = false;\n         errors[\"location\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"location\"] !== \"undefined\") {\n         if (!fields[\"location\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"location\"] = \"Only letters\";\n         }\n      }\n\n      //Email\n      if (!fields[\"email\"]) {\n         formIsValid = false;\n         errors[\"email\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n         let lastAtPos = fields[\"email\"].lastIndexOf('@');\n         let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n         if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n         }\n      }\n\n      this.setState({ errors: errors });\n      return formIsValid;\n   }\n\n   genderChange = event => {\n      this.setState({ value: event.target.value });\n   };\n\n   //define Function for change input data\n   handleChange(field, e) {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({ fields });\n   }\n\n   //define function for submit form \n   addUserFormSubmit(e) {\n      e.preventDefault();\n      if (this.handleValidation()) {\n         // process \n         return true;\n      } else {\n         alert(\"Form has errors.\")\n      }\n   }\n\n   render() {\n\n      const thumb = require('../../../../assets/images/user-edit.png').default;\n\n      return (\n         <div className=\"profile-wrapper\">\n            <h4>Edit Profile Information</h4>\n            <Grid container spacing={4}>\n               <Grid item xs={12} sm={12} md={6} lg={6}>\n                  <form onSubmit={this.addUserFormSubmit.bind(this)}>\n                     <div>\n                        <TextField\n                           label=\"first Name\"\n                           className=\"iron-form-input-wrap\"\n                           error={this.state.errors[\"fname\"]}\n                           ref=\"fname\"\n                           onChange={this.handleChange.bind(this, \"fname\")}\n                           value={this.state.fields[\"fname\"]}\n                        />\n                        <TextField\n                           label=\"last Name\"\n                           className=\"iron-form-input-wrap\"\n                           error={this.state.errors[\"lname\"]}\n                           ref=\"lname\"\n                           onChange={this.handleChange.bind(this, \"lname\")}\n                           value={this.state.fields[\"lname\"]}\n                        />\n                        <FormControl component=\"fieldset\" className=\"mb-20\" >\n                           <RadioGroup\n                              aria-label=\"Gender\"\n                              name=\"gender1\"\n                              value={this.state.value}\n                              onChange={this.genderChange}\n                           >\n                              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                           </RadioGroup>\n                        </FormControl>\n                        <TextField\n                           id=\"date\"\n                           label=\"Birth date\"\n                           type=\"date\"\n                           defaultValue=\"2017-05-24\"\n                           className=\"iron-form-input-wrap\"\n                           InputLabelProps={{\n                              shrink: true,\n                           }}\n                        />\n                        <TextField\n                           label=\"mobile\"\n                           className=\"iron-form-input-wrap\"\n                           error={this.state.errors[\"mobile\"]}\n                           ref=\"mobile\"\n                           onChange={this.handleChange.bind(this, \"mobile\")}\n                           value={this.state.fields[\"mobile\"]}\n                        />\n                        <TextField\n                           label=\"location\"\n                           className=\"iron-form-input-wrap\"\n                           error={this.state.errors[\"location\"]}\n                           ref=\"location\"\n                           onChange={this.handleChange.bind(this, \"location\")}\n                           value={this.state.fields[\"location\"]}\n                        />\n                        <TextField\n                           label=\"email\"\n                           className=\"iron-form-input-wrap\"\n                           error={this.state.errors[\"email\"]}\n                           refs=\"email\"\n                           onChange={this.handleChange.bind(this, \"email\")}\n                           value={this.state.fields[\"email\"]}\n                        />\n                     </div>\n                     <Button type=\"submit\" className=\"button btn-active mb-15\">save</Button>\n                  </form>\n               </Grid>\n               <Grid item md={6} lg={6} className=\"edit-window-thumb\" style={{ backgroundImage: `url(${thumb})` }}>\n\n               </Grid>\n            </Grid>\n         </div>\n      )\n   }\n}\n\nexport default EditInfo;","/**\n * user edit page\n */\nimport React, { Fragment } from 'react';\nimport EditCard from './components/EditCard';\nimport EditAddress from './components/EditAddress';\nimport EditInfo from './components/EditInfo';\n\n\nexport default class EditUser extends React.Component {\n\n   render() {\n      const { search } = this.props.location;\n\n      return (\n         <Fragment>\n            {/* {search && search === '?type=info'\n               ?\n               <EditInfo />\n               :\n               [\n                  (search === '?type=address' || search === '?type=ship-address'\n                     ?\n                     <EditAddress type={search} />\n                     :\n                     <EditCard type={search} />\n                  ),\n               ]\n            } */}\n            {search && search === '?type=info'\n               ?\n               <EditInfo />\n               :\n               <Fragment>\n                  {search === '?type=address' || search === '?type=ship-address' ?\n                     <EditAddress type={search} />\n                     :\n                     <EditCard type={search} />\n                  }\n               </Fragment>\n            }\n         </Fragment>\n      )\n   }\n}\n\n","/**\n * account detail page\n */\n/* eslint-disable */\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\n//components\nimport OrderHistory from './order-history';\nimport Profile from './profile';\nimport UserAddress from './address';\nimport UserCards from './cards';\nimport EditUser from './edit';\n\n\nexport default function Account({ match }) {\n   const userData = [\n      {\n         icon: 'history',\n         title: 'order history',\n         path: \"order-history\",\n      },\n      {\n         icon: 'account_circle',\n         title: 'profile',\n         path: \"profile\",\n      },\n      {\n         icon: 'location_on',\n         title: 'address',\n         path: \"address\",\n      },\n      {\n         icon: 'credit_card',\n         title: 'saved cards',\n         path: \"cards\",\n      }\n   ]\n\n   return (\n      <div className=\"iron-user-info-wrap section-pad\">\n         <div className=\"container\">\n            <div className=\"user-profile-wrap d-flex mb-15\">\n               <div className=\"user-avatar\">\n                  <Avatar src={require(\"../../assets/images/user-4.jpg\").default} alt=\"user-img\" />\n               </div>\n               <div className=\"user-info pl-15\">\n                  <h4>Hi, John Doe</h4>\n                  <span className=\"secondary-color\">johndoe@deo.com</span>\n               </div>\n            </div>\n            <Grid container spacing={2} className=\"my-0\">\n               <Grid item xs={12} sm={12} md={3} lg={3} className=\"py-0 mb-md-0 mb-30\">\n                  <div className=\"iron-shadow px-sm-30 px-15 h-100\">\n                     <ul className=\"user-info-links pt-10 mb-0\">\n                        {userData.map((userdata, index) => (\n                           <li key={index} className=\"links d-block\">\n                              <Link\n                                 className=\"d-flex justify-content-start align-items-center\"\n                                 to={`${match.url}/${userdata.path}`}\n                              >\n                                 <i className=\"material-icons\">{userdata.icon}</i>\n                                 {userdata.title}\n                              </Link>\n                           </li>\n                        ))}\n                     </ul>\n                  </div>\n               </Grid>\n               <Grid item xs={12} sm={12} md={9} lg={9} className=\"py-0\">\n                  <div className=\"iron-shadow p-15 pt-20\">\n                     <Switch>\n                        <Redirect exact from={`${match.url}`} to={`${match.url}/order-history`} />\n                        <Route\n                           path={`${match.url}/order-history`}\n                           component={OrderHistory}\n                        />\n                        <Route\n                           path={`${match.url}/profile`}\n                           component={Profile}\n                        />\n                        <Route\n                           path={`${match.url}/address`}\n                           component={UserAddress}\n                        />\n                        <Route\n                           path={`${match.url}/cards`}\n                           component={UserCards}\n                        />\n                        <Route\n                           path={`${match.url}/edit`}\n                           component={EditUser}\n                        />\n                     </Switch>\n                  </div>\n               </Grid>\n            </Grid>\n         </div>\n      </div>\n   )\n}\n"],"sourceRoot":""}