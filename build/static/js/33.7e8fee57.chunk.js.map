{"version":3,"sources":["components/widgets/PageTitle.js","helpers/index.js","components/widgets/ViewCartSlide.js","routes/check-out/payment/components/AddressForm.js","routes/check-out/payment/components/PaymentTabs.js","routes/check-out/payment/components/OffersCode.js","routes/check-out/payment/index.js"],"names":["PageTitle","props","className","title","desc","isProductExist","ID","exists","cart","store","getState","ecommerce","length","productID","productExitsInWishlist","exist","wishlist","getSubTotalPrice","subTotalPrice","totalPrice","getTotalPrice","tax","shipping","toFixed","ViewCartSlide","toggleDrawer","side","open","setState","confirmationDialog","React","createRef","state","right","cartItem","this","current","openDialog","popupResponse","removeProductItem","url","split","onClick","anchor","onClose","onOpen","tabIndex","role","map","index","getUrl","image","src","alt","require","default","name","quantity","onDeleteCartItem","component","Link","to","ref","onConfirm","res","deleteCartItem","Component","connect","AddressForm","fields","errors","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","field","e","target","value","preventDefault","handleValidation","localStorage","setItem","JSON","stringify","onSubmit","alert","onAddressFormSubmit","bind","Grid","container","spacing","item","xs","sm","md","lg","TextField","fullWidth","label","error","onChange","handleChange","refs","Button","type","bankOptions","cardValue","bankLabel","TextMaskCustom","inputRef","other","mask","TextCVC","TabContainer","children","dir","Typography","PaymentTabs","selected","age","creditCardInfo","number","holderName","expiryDate","focused","optionChange","event","handleChangeIndex","onRadioChange","swipeableActions","updateHeight","key","AppBar","position","color","Tabs","variant","scrollButtons","indicatorColor","Tab","axis","onChangeIndex","animateHeight","action","actions","noValidate","autoComplete","required","id","onCreditCardValueChange","onFocus","onFocusTextFields","FormControl","InputLabel","Input","inputComponent","cvc","finalPayment","history","expiry","Divider","bankOption","Radio","checked","href","width","height","Select","inputProps","MenuItem","withRouter","offerCoupons","couponName","cardType","offerLabel","OffersCode","placeholder","offerCoupon","PaymentOptions","expanded","stepOneFormValid","panel","Accordion","AccordionSummary","expandIcon","AccordionDetails","handleSubmitFirstForm","disabled","openPanel"],"mappings":"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","file":"static/js/33.7e8fee57.chunk.js","sourcesContent":["/**\n * Page title component\n */\nimport React from 'react';\n\nfunction PageTitle(props) {\n   return (\n      <div className=\"page-title-bar text-center\">\n         <div className=\"container\">\n            <h1 className=\"mb-30\"> {props.title}</h1>\n            <p className=\"lead text-capitalize mb-0\"> {props.desc} </p>\n         </div>\n      </div>\n   )\n}\n\nexport default PageTitle;","/**\n * Helpers Method\n */\nimport { store } from \"../index\";\n\n/**\n *  function to check product is exits in cart or not\n */\nexport function isProductExist(ID) {\n   let exists = false\n   let cart = store.getState().ecommerce.cart;\n   if (cart && cart.length > 0) {\n      for (const cartItem of cart) {\n         if (cartItem.productID === ID) {\n            exists = true\n         }\n      }\n   }\n   return exists;\n}\n\n/**\n *  function to check product is exits in wishlist or not\n */\nexport function productExitsInWishlist(ID) {\n   let exist = false\n   let wishlist = store.getState().ecommerce.wishlist;\n   if (wishlist && wishlist.length > 0) {\n      for (const item of wishlist) {\n         if (item.productID === ID) {\n            exist = true\n         }\n      }\n   }\n   return exist;\n}\n\n/**\n * Get subTotal Price\n */\nexport function getSubTotalPrice() {\n   let subTotalPrice = 0;\n   let cart = store.getState().ecommerce.cart;\n   if (cart && cart.length > 0) {\n      for (const cartItem of cart) {\n         subTotalPrice += cartItem.totalPrice;\n      }\n      return subTotalPrice;\n   }\n}\n\n/**\n * get Total Price\n */\nexport function getTotalPrice() {\n   const { tax, shipping } = store.getState().ecommerce;\n   const totalPrice = getSubTotalPrice() + shipping + tax;\n   return totalPrice.toFixed(2);\n}\n","/**\n * View cart sidebar component\n */\n/* eslint-disable */\nimport React, { Fragment } from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport CurrencyIcon from '../global/currency/CurrencyIcon';\nimport { Link } from 'react-router-dom';\n\n//connect to store\nimport { connect } from 'react-redux';\n\n//action\nimport { removeProductItem } from '../../actions/action';\n\n//global component\nimport ConfirmationDialog from '../global/confirmation-popup';\n\n// helpers\nimport { getSubTotalPrice, getTotalPrice } from \"../../helpers\";\n\nclass ViewCartSlide extends React.Component {\n\n   constructor(props) {\n      super(props);\n      this.confirmationDialog = React.createRef();\n      this.state = {\n         right: false,\n      };\n   }\n   /**\n    * function for toggle sidebar\n    */\n   toggleDrawer = (side, open) => () => {\n      this.setState({\n         [side]: open,\n      });\n   };\n\n   /**\n    * function to delete product from cart\n    * @param {object} cartItem \n    */\n   onDeleteCartItem(cartItem) {\n      this.cartItem = cartItem;\n      this.confirmationDialog.current.openDialog();\n   }\n\n   /**\n    * function for delete cart product\n    * @param {boolean} popupResponse \n    */\n   deleteCartItem(popupResponse) {\n      if (popupResponse) {\n         this.props.removeProductItem(this.cartItem);\n         this.cartItem = \"\"\n      }\n      this.setState({\n         right: false,\n      });\n   }\n\n   //get url\n   getUrl(url) {\n      return url.split('/')[0];\n   }\n\n   render() {\n\n      const { cart, tax, shipping } = this.props;\n      return (\n         <div className=\"iron-view-cart-wrapper\">\n            <Button\n               className=\"button btn-active\"\n               onClick={this.toggleDrawer('right', true)}\n            >\n               Show Order Detail : <span className=\"pl-5\"><CurrencyIcon /> {getTotalPrice()}</span>\n\n            </Button>\n            <SwipeableDrawer\n               anchor=\"right\"\n               open={this.state.right}\n               onClose={this.toggleDrawer('right', false)}\n               onOpen={this.toggleDrawer('right', true)}\n            >\n               <div\n                  tabIndex={0}\n                  role=\"button\"\n                  className=\"iron-overflow-x-hidden\"\n               //onClick={this.toggleDrawer('right', false)}\n               // onKeyDown={this.toggleDrawer('right', false)}\n               >\n                  <div className=\"iron-view-cart-sidebar\">\n                     <div className=\"side-cart-head text-center py-40 px-30 bg-active\">\n                        <div className=\"mb-15\"><i className=\"material-icons\"> shopping_cart </i></div>\n                        <h5 className=\"mb-0\">You have {cart ? cart.length : 0} items in your cart</h5>\n                     </div>\n                     <div className=\"side-cart-wrapper px-15\">\n                        {(cart && cart.length > 0) ?\n                           (\n                              <Fragment>\n                                 <div>\n                                    {cart.map((cartItem, index) => {\n                                       return (\n                                          <div key={index} className=\"side-cart-list d-flex justify-content-start align-items-center py-20\">\n                                             <div className=\"cart-thumb\">\n                                                {this.getUrl(cartItem.image) === 'https:' ?\n                                                   <img\n                                                      src={cartItem.image}\n                                                      alt=\"cart-item\"\n                                                   />\n                                                   :\n                                                   <img\n                                                      src={require(`../../assets/images/${cartItem.image}`).default}\n                                                      alt=\"cart-item\"\n                                                   />\n                                                }\n                                             </div>\n                                             <div className=\"cart-content\">\n                                                <div className=\"d-flex justify-content-start align-items-start pl-20 pr-5\">\n                                                   <div className=\"title\">\n                                                      <h6 className=\"mb-5 text-truncate\">{cartItem.name}</h6>\n                                                      <p className=\"mb-5\"><span>{cartItem.quantity}</span></p>\n                                                      <p className=\"font-bold\">\n                                                         <CurrencyIcon />\n                                                         {cartItem.totalPrice.toFixed(2)}\n                                                      </p>\n                                                   </div>\n                                                   <div className=\"edit-cart\">\n                                                      <Button className=\"p-0\"\n                                                         onClick={() => this.onDeleteCartItem(cartItem)}\n                                                      >\n                                                         <i className=\"material-icons\"> remove_shopping_cart </i>\n                                                      </Button>\n                                                      <Button component={Link} to=\"/cart\" className=\"p-0\">\n                                                         <i className=\"material-icons\"> edit </i>\n                                                      </Button>\n                                                   </div>\n                                                </div>\n                                             </div>\n                                          </div>\n                                       )\n                                    })\n                                    }\n                                 </div>\n                                 <div className=\"py-20\">\n                                    <div className=\"d-flex justify-content-between align-items-center mb-20\">\n                                       <span>Subtotal</span><span><CurrencyIcon /> {getSubTotalPrice()}</span></div>\n                                    <div className=\"d-flex justify-content-between align-items-center mb-20\">\n                                       <span>Shipping</span><span><CurrencyIcon /> {shipping}5</span></div>\n                                    <div className=\"d-flex justify-content-between align-items-center mb-20\">\n                                       <span>Tax(GST)</span><span><CurrencyIcon /> {tax}</span></div>\n                                    <Divider className=\"my-20\" />\n                                    <div className=\"mb-25 d-flex justify-content-between align-items-center\">\n                                       <h4>Total</h4><span></span>\n                                       <h4> <CurrencyIcon /> {getTotalPrice()}</h4>\n                                    </div>\n                                 </div>\n                              </Fragment>\n                           )\n                           :\n                           (\n                              <div className=\"section-pad text-center\">\n                                 <div className=\"mb-30\">\n                                    <img src={require(\"../../assets/images/empty-cart.png\")} alt=\"shop-cart\" />\n                                 </div>\n                                 <h4>Your Shopping Bag is empty.</h4>\n                                 <Link to='/shop' className=\"text-capitalize\">go for shopping</Link>\n                              </div>\n                           )\n                        }\n                     </div>\n                     <ConfirmationDialog\n                        ref={this.confirmationDialog}\n                        onConfirm={(res) => this.deleteCartItem(res)}\n                     />\n                  </div>\n               </div>\n            </SwipeableDrawer>\n         </div>\n      );\n   }\n}\n\n// map state to props\nconst mapStateToProps = ({ ecommerce }) => {\n   const { cart, tax, shipping } = ecommerce;\n   return { cart, tax, shipping };\n}\n\nexport default connect(mapStateToProps, {\n   removeProductItem,\n})(ViewCartSlide);","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nclass AddressForm extends React.Component {\n\n   state = {\n      fields: {},\n      errors: {}\n   };\n\n   //handle form validation\n   handleValidation() {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      //FName\n      if (!fields[\"fname\"]) {\n         formIsValid = false;\n         errors[\"fname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"fname\"] !== \"undefined\") {\n         if (!fields[\"fname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"fname\"] = \"Only letters\";\n         }\n      }\n\n      //LName\n      if (!fields[\"lname\"]) {\n         formIsValid = false;\n         errors[\"lname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"lname\"] !== \"undefined\") {\n         if (!fields[\"lname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"lname\"] = \"Only letters\";\n         }\n      }\n\n      //street name or num.\n      if (!fields[\"street\"]) {\n         formIsValid = false;\n         errors[\"street\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"street\"] !== \"undefined\") {\n         if (!fields[\"street\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"street\"] = \"Only letters and numbers\";\n         }\n      }\n\n      //apt-building Name\n      if (!fields[\"aptname\"]) {\n         formIsValid = false;\n         errors[\"aptname\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"aptname\"] !== \"undefined\") {\n         if (!fields[\"aptname\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"aptname\"] = \"Only letters\";\n         }\n      }\n      //zip code\n      if (!fields[\"zipcode\"]) {\n         formIsValid = false;\n         errors[\"zipcode\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"zipcode\"] !== \"undefined\") {\n         if (!fields[\"zipcode\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"zipcode\"] = \"not a valid zip-code\";\n         }\n      }\n\n      //state\n      if (!fields[\"state\"]) {\n         formIsValid = false;\n         errors[\"state\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"state\"] !== \"undefined\") {\n         if (!fields[\"state\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"state\"] = \"Only letters\";\n         }\n      }\n\n      //country\n      if (!fields[\"country\"]) {\n         formIsValid = false;\n         errors[\"country\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"country\"] !== \"undefined\") {\n         if (!fields[\"country\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"country\"] = \"Only letters\";\n         }\n      }\n\n      //mobile num.\n      if (!fields[\"mobile\"]) {\n         formIsValid = false;\n         errors[\"mobile\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"mobile\"] !== \"undefined\") {\n         if (!fields[\"mobile\"].match(/^[a-zA-Z]+$/)) {\n            formIsValid = false;\n            errors[\"mobile\"] = \"number is not valid\";\n         }\n      }\n\n\n      //Email\n      if (!fields[\"email\"]) {\n         formIsValid = false;\n         errors[\"email\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n         let lastAtPos = fields[\"email\"].lastIndexOf('@');\n         let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n         if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n         }\n      }\n\n      this.setState({ errors: errors });\n      return formIsValid;\n   }\n\n   handleChange(field, e) {\n\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      //console.log(fields);\n      this.setState({ fields });\n\n   }\n\n   onAddressFormSubmit(e) {\n      e.preventDefault();\n      if (this.handleValidation()) {\n         // process \n         localStorage.setItem('stepOneFormData', JSON.stringify(this.state.fields));\n         this.props.onSubmit();\n\n      } else {\n         alert(\"Form has errors.\")\n      }\n   }\n\n   render() {\n      return (\n         <form onSubmit={this.onAddressFormSubmit.bind(this)}>\n            <Grid container spacing={4}>\n               <Grid item xs={12} sm={6} md={6} lg={4}>\n                  <TextField\n                     fullWidth\n                     label=\"first Name\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"fname\"] ? true : false}\n                     ref=\"fname\"\n                     onChange={this.handleChange.bind(this, \"fname\")}\n                     value={this.state.fields[\"fname\"] ? this.state.fields[\"fname\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"fname\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={4}>\n                  <TextField\n                     fullWidth\n                     label=\"last Name\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"lname\"] ? true : false}\n                     ref=\"lname\"\n                     onChange={this.handleChange.bind(this, \"lname\")}\n                     value={this.state.fields[\"lname\"] ? this.state.fields[\"lname\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"lname\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={4}>\n                  <TextField\n                     fullWidth\n                     label=\"Street Name or Number\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"street\"] ? true : false}\n                     ref=\"street\"\n                     onChange={this.handleChange.bind(this, \"street\")}\n                     value={this.state.fields[\"street\"] ? this.state.fields[\"street\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"street\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"Apt Building Name\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"aptname\"] ? true : false}\n                     ref=\"aptname\"\n                     onChange={this.handleChange.bind(this, \"aptname\")}\n                     value={this.state.fields[\"aptname\"] ? this.state.fields[\"aptname\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"aptname\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"zip code\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"zipcode\"] ? true : false}\n                     ref=\"zipcode\"\n                     onChange={this.handleChange.bind(this, \"zipcode\")}\n                     value={this.state.fields[\"zipcode\"] ? this.state.fields[\"zipcode\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"zipcode\"]}</span>\n               </Grid>\n\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"city and state\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"state\"] ? true : false}\n                     ref=\"state\"\n                     onChange={this.handleChange.bind(this, \"state\")}\n                     value={this.state.fields[\"state\"] ? this.state.fields[\"state\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"state\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"country\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"country\"] ? true : false}\n                     ref=\"country\"\n                     onChange={this.handleChange.bind(this, \"country\")}\n                     value={this.state.fields[\"country\"] ? this.state.fields[\"country\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"country\"]}</span>\n               </Grid>\n            </Grid>\n            <h4 className=\"mb-0 mt-40\">enter your contact information</h4>\n            <Grid container spacing={4}>\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"mobile no\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"mobile\"] ? true : false}\n                     ref=\"mobile\"\n                     onChange={this.handleChange.bind(this, \"mobile\")}\n                     value={this.state.fields[\"mobile\"] ? this.state.fields[\"mobile\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"mobile\"]}</span>\n               </Grid>\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <TextField\n                     fullWidth\n                     label=\"email\"\n                     className=\"iron-form-input-wrap\"\n                     error={this.state.errors[\"email\"] ? true : false}\n                     refs=\"email\"\n                     onChange={this.handleChange.bind(this, \"email\")}\n                     value={this.state.fields[\"email\"] ? this.state.fields[\"email\"] : ''}\n                  />\n                  <span className=\"error\">{this.state.errors[\"email\"]}</span>\n               </Grid>\n            </Grid>\n            <Grid container spacing={0} className=\"mt-20\">\n               <Grid item xs={12} sm={6} md={6} lg={6}>\n                  <h4 className=\"mb-5\">Share with other?</h4>\n                  <p className=\"mb-10\">If you want to share order and shipping details with someone else then enter the email of that person. We will send order updates to this email also.</p>\n                  <TextField\n                     fullWidth\n                     label=\"email\"\n                     className=\"iron-form-input-wrap\"\n                  />\n                  <span className=\"error\">{this.state.errors[\"refemail\"]}</span>\n               </Grid>\n            </Grid>\n            <Button className=\"button btn-active btn-lg mb-40 mt-15\" type=\"submit\">continue to payment</Button>\n         </form>\n      )\n   }\n}\nexport default AddressForm;","/**\n * payment tab component\n */\n/* eslint-disable */\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button, Divider, Radio } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from \"@material-ui/core/TextField\";\nimport MaskedInput from \"react-text-mask\";\nimport Input from '@material-ui/core/Input';\nimport { Link, withRouter } from 'react-router-dom';\nimport Cards from 'react-credit-cards';\n\n//connect to store\nimport { connect } from 'react-redux';\n\n// action\nimport { finalPayment } from '../../../../actions/action';\n\n//bank card content\nlet bankOptions = [\n   {\n      image: require(\"../../../../assets/images/client-logo-1.png\").default,\n      cardValue: 'a',\n      bankLabel: 'A'\n   },\n   {\n      image: require(\"../../../../assets/images/client-logo-3.png\").default,\n      cardValue: 'b',\n      bankLabel: 'B'\n   },\n   {\n      image: require(\"../../../../assets/images/client-logo-4.png\").default,\n      cardValue: 'c',\n      bankLabel: 'C'\n   },\n   {\n      image: require(\"../../../../assets/images/client-logo-1.png\").default,\n      cardValue: 'd',\n      bankLabel: 'D'\n   },\n   {\n      image: require(\"../../../../assets/images/client-logo-3.png\").default,\n      cardValue: 'e',\n      bankLabel: 'E'\n   }\n]\n\nconst TextMaskCustom = (props) => {\n   const { inputRef, ...other } = props;\n   return (\n      <MaskedInput\n         {...other}\n         mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/]}\n      />\n   );\n\n}\nconst TextCVC = (props) => {\n   const { inputRef, ...other } = props;\n   return (\n      <MaskedInput\n         {...other}\n         mask={[/\\d/, /\\d/, /\\d/, /\\d/]}\n      />\n   );\n}\n\nfunction TabContainer({ children, dir }) {\n   return (\n      <Typography component=\"div\" dir={dir} >\n         {children}\n      </Typography>\n   );\n}\n\nclass PaymentTabs extends React.Component {\n\n   state = {\n      value: 0,\n      selected: 'a',\n      age: '',\n      creditCardInfo: {\n         number: '',\n         holderName: '',\n         expiryDate: '',\n         focused: ''\n      }\n\n   };\n\n   componentDidUpdate() {\n      this.swipeableActions.updateHeight();\n   }\n\n   optionChange = event => {\n      this.setState({ [event.target.name]: event.target.value });\n   };\n\n   handleChange = (event, value) => {\n      this.setState({ value });\n   };\n\n   handleChangeIndex = index => {\n      this.setState({ value: index });\n   };\n\n   onRadioChange = event => {\n      this.setState({ selected: event.target.value });\n   };\n\n   onCreditCardValueChange(key, e) {\n      this.setState({\n         creditCardInfo: {\n            ...this.state.creditCardInfo,\n            [key]: e.target.value\n         }\n      })\n   }\n\n   onFocusTextFields(key) {\n      this.setState({\n         creditCardInfo: {\n            ...this.state.creditCardInfo,\n            focused: key\n         }\n      })\n   }\n\n   render() {\n      const { creditCardInfo } = this.state\n      return (\n         <div>\n            <AppBar position=\"static\" color=\"default\" className=\"bg-base box-shadow-none iron-tab-bar\">\n               <Tabs\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                  indicatorColor=\"primary\"\n                  className=\"bg-base color-grey button-scroll-hide\"\n               >\n                  <Tab label=\"card info\" />\n                  <Tab label=\"credit/debit/netBanking\" />\n                  <Tab label=\"paypal\" />\n               </Tabs>\n            </AppBar>\n            <SwipeableViews\n               axis={'x'}\n               index={this.state.value}\n               onChangeIndex={this.handleChangeIndex}\n               animateHeight\n               action={actions => {\n                  this.swipeableActions = actions;\n               }}\n            >\n               <TabContainer>\n                  <div className=\"d-block pb-40\">\n                     <div className=\"header-mat-tab bg-secondary text-center p-15 pt-50\">\n                        <div className=\"mb-25\">\n                           <img alt=\"card\" src={require(\"../../../../assets/images/card.png\").default} />\n                        </div>\n                        <h4 className=\"mb-50\">enter card detail</h4>\n                     </div>\n                     <Grid container spacing={0}>\n                        <Grid item xs={12} sm={12} md={6} lg={6} className=\"pr-md-15\">\n                           <form noValidate autoComplete=\"off\" className=\"my-20\">\n                              <TextField\n                                 required\n                                 //autoComplete=\"true\"\n                                 id=\"credit-card-number\"\n                                 label=\"Number\"\n                                 value={creditCardInfo.number}\n                                 onChange={(e) => this.onCreditCardValueChange('number', e)}\n                                 variant=\"outlined\"\n                                 className=\"iron-form-input-wrap\"\n                                 onFocus={() => this.onFocusTextFields('number')}\n                              />\n                              <TextField\n                                 id=\"Holder Name\"\n                                 label=\"Name\"\n                                 required\n                                 //autoComplete\n                                 value={creditCardInfo.holderName}\n                                 onChange={(e) => this.onCreditCardValueChange('holderName', e)}\n                                 variant=\"outlined\"\n                                 className=\"iron-form-input-wrap\"\n                                 onFocus={() => this.onFocusTextFields('name')}\n                              />\n                              <div className=\"d-md-flex\">\n                                 <FormControl className=\"mr-md-30 mb-30 mb-md-0 iron-form-input-wrap\">\n                                    <InputLabel>\n                                       expiry date (MM/YY)\n                                    </InputLabel>\n                                    <Input\n                                       required\n                                       //autoComplete\n                                       value={creditCardInfo.expiryDate}\n                                       onChange={(e) => this.onCreditCardValueChange('expiryDate', e)}\n                                       onFocus={() => this.onFocusTextFields('expiry')}\n                                       inputComponent={TextMaskCustom}\n                                    />\n                                 </FormControl>\n                                 <FormControl className=\"iron-form-input-wrap\">\n                                    <InputLabel>CVC</InputLabel>\n                                    <Input\n                                       required\n                                       //autoComplete\n                                       value={creditCardInfo.cvc ? creditCardInfo.cvc : ''}\n                                       onChange={(e) => this.onCreditCardValueChange('cvc', e)}\n                                       onFocus={() => this.onFocusTextFields('cvc')}\n                                       inputComponent={TextCVC}\n                                    />\n                                 </FormControl>\n                              </div>\n                              <div className=\"d-flex pt-30\">\n                                 <Button\n                                    onClick={() => this.props.finalPayment(this.props.history)}\n                                    className=\"button btn-active mr-20\"\n                                 >\n                                    submit\n                                                </Button>\n                                 <Button className=\"button\">clear</Button>\n                              </div>\n                           </form>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={6} lg={6} className=\"pl-md-15\">\n                           <div className=\"d-md-flex justify-content-center align-items-center pt-md-60 pt-30\">\n                              <Cards\n                                 number={creditCardInfo.number}\n                                 name={creditCardInfo.holderName}\n                                 expiry={creditCardInfo.expiryDate}\n                                 cvc={creditCardInfo.cvc ? creditCardInfo.cvc : ''}\n                                 focused={creditCardInfo.focused}\n                              />\n                           </div>\n                        </Grid>\n                     </Grid>\n                  </div>\n               </TabContainer>\n               <TabContainer>\n                  <div className=\"d-bock\">\n                     <div className=\"header-mat-tab bg-secondary text-center p-15 py-50\">\n                        <div className=\"mb-25\">\n                           <img alt=\"card\" src={require(\"../../../../assets/images/online-shop.png\").default} />\n                        </div>\n                        <h4>Select Bank for NetBanking</h4>\n                     </div>\n                     <Divider />\n                     <div className=\"py-60 iron-card-radio text-center\">\n                        {bankOptions.map((bankOption, key) => {\n                           return (\n                              <div key={key} className=\"card-list pr-15 py-20  m-15\">\n                                 <div className=\"d-flex justify-content-start align-items-center\">\n                                    <Radio\n                                       checked={this.state.selected === bankOption.cardValue}\n                                       onChange={this.onRadioChange}\n                                       value={bankOption.cardValue}\n                                       name=\"radio-button-demo\"\n                                       aria-label={bankOption.bankLabel}\n                                       color=\"secondary\"\n                                    />\n                                    <div className=\"text-center\">\n                                       <a href=\"#\">\n                                          <img src={bankOption.image} alt=\"bank\" width=\"250\" height=\"49\" />\n                                       </a>\n                                    </div>\n                                 </div>\n                              </div>\n                           )\n                        })}\n                     </div>\n                     <div>\n                        <Grid container spacing={0}>\n                           <Grid item lg={5} className=\"mb-15\">\n                              <h6 className=\"mb-0\">all banks</h6>\n                              <div className=\"d-block\">\n                                 <FormControl className=\"iron-select-width\">\n                                    <InputLabel>select option</InputLabel>\n                                    <Select\n                                       required\n                                       autoComplete=\"current-value\"\n                                       value={this.state.age}\n                                       onChange={this.optionChange}\n                                       inputProps={{\n                                          name: 'age',\n                                       }}\n                                    >\n                                       <MenuItem value=\"\">\n                                          <em>None</em>\n                                       </MenuItem>\n                                       <MenuItem value={10}>option 1</MenuItem>\n                                       <MenuItem value={20}>option 2</MenuItem>\n                                       <MenuItem value={30}>option 3</MenuItem>\n                                    </Select>\n                                 </FormControl>\n                              </div>\n                              <Button\n                                 onClick={() => this.props.finalPayment(this.props.history)}\n                                 className=\"button btn-active my-20\"\n                              >\n                                 make payment\n                                            </Button>\n                           </Grid>\n                        </Grid>\n                     </div>\n                  </div>\n               </TabContainer>\n               <TabContainer>\n                  <div className=\"d-bock\">\n                     <div className=\"bg-secondary m-sm-20 p-sm-30 p-15\">\n                        <div className=\"paypal-desc mb-20\">\n                           <span className=\"mr-10\">PayPal</span>\n                           <img src={require(\"../../../../assets/images/paypal.png\").default} alt=\"paypal\" height=\"52\" width=\"150\" />\n                           <a href=\"https://www.paypal.com/in/home\" className=\"ml-5\">What is PayPal ?</a>\n                        </div>\n                        <div className=\"p-20 iron-payment-box bg-\">\n                           <p className=\"mb-0\">Pay via PayPal; you can pay with your credit card if you don’t have a PayPal account. SANDBOX ENABLED. You can use sandbox testing accounts only. See the <a href=\"https://developer.paypal.com/docs/classic/lifecycle/ug_sandbox/\">PayPal Sandbox Testing Guide</a> for more details.</p>\n                        </div>\n                        <Divider className=\"my-20\" />\n                        <div className=\"text-right\">\n                           <Button component={Link} to=\"https://www.paypal.com/in/signin\" className=\"button btn-active btn-lg\">proceed to PayPal</Button>\n                        </div>\n                     </div>\n                  </div>\n               </TabContainer>\n\n            </SwipeableViews>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = ({ ecommerce }) => {\n   const { cart } = ecommerce;\n   return { cart };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n   finalPayment\n})(PaymentTabs));\n\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, Button, Divider, Radio } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n//offer card content\nlet offerCoupons = [\n   {\n      couponName: 'Visa Mega Shopping Offer',\n      cardType: 'Debit Card',\n      cardValue: 'a',\n      offerLabel: 'A'\n   },\n   {\n      couponName: 'American Express 20% Flat',\n      cardType: 'Credit Card',\n      cardValue: 'b',\n      offerLabel: 'B'\n   },\n   {\n      couponName: 'BOA Buy 1 Get One Offer',\n      cardType: 'Debit Card',\n      cardValue: 'c',\n      offerLabel: 'C'\n   },\n   {\n      couponName: 'Mastercard Elite Card',\n      cardType: 'Master Card',\n      cardValue: 'd',\n      offerLabel: 'D'\n   },\n   {\n      couponName: 'Visa Mega Shopping Offer',\n      cardType: 'Debit Card',\n      cardValue: 'e',\n      offerLabel: 'E'\n   }\n]\n\nfunction TabContainer({ children, dir }) {\n   return (\n      <Typography component=\"div\" dir={dir} >\n         {children}\n      </Typography>\n   );\n}\n\nclass OffersCode extends React.Component {\n\n   state = {\n      value: 0,\n      selected: 'a',\n      age: ''\n   };\n\n   optionChange = event => {\n      this.setState({ [event.target.name]: event.target.value });\n   };\n\n   handleChange = (event, value) => {\n      this.setState({ value });\n   };\n\n   handleChangeIndex = index => {\n      this.setState({ value: index });\n   };\n\n   onRadioChange = event => {\n      this.setState({ selected: event.target.value });\n   };\n\n   render() {\n\n      return (\n         <div>\n            <AppBar position=\"static\" color=\"default\" className=\"bg-base box-shadow-none iron-tab-bar\">\n               <Tabs\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                  indicatorColor=\"primary\"\n                  className=\"bg-base color-grey button-scroll-hide\"\n               >\n                  <Tab label=\"offer code\" />\n                  <Tab label=\"credit/debit/netBanking\" />\n               </Tabs>\n            </AppBar>\n            <SwipeableViews\n               axis={'x'}\n               index={this.state.value}\n               onChangeIndex={this.handleChangeIndex}\n               animateHeight\n            >\n               <TabContainer>\n                  <div>\n                     <div className=\"header-mat-tab bg-secondary text-center p-15 pt-50\">\n                        <div className=\"mb-25\">\n                           <img alt=\"discount\" src={require(\"../../../../assets/images/discount.png\").default} />\n                        </div>\n                        <h4 className=\"mb-50\">Apply for embryo offer/Discount</h4>\n                     </div>\n                     <form>\n                        <div>\n                           <Grid container spacing={0}>\n                              <Grid item xs={12} sm={12} md={5} lg={4} className=\"mx-auto text-center\">\n                                 <div className=\"pt-60 pb-20\">\n                                    <div className=\"mb-20 iron-coupon-form d-flex justify-content-center align-items-center\">\n                                       <TextField\n                                          placeholder=\"enter code\"\n                                       />\n                                       <Button className=\"button p-0\" onClick={this.props.open}>\n                                          <i className=\"material-icons\">send</i>\n                                       </Button>\n                                    </div>\n                                    <p className=\"mb-0\">*Only Valid coupon or offer code is acceptable.</p>\n                                    <p className=\"mb-0\">To know your coupon valid or not click\n                                                <a href=\"#\"> here</a>\n                                    </p>\n                                 </div>\n                              </Grid>\n                           </Grid>\n                        </div>\n                     </form>\n                  </div>\n               </TabContainer>\n               <TabContainer>\n                  <div>\n                     <div className=\"header-mat-tab bg-secondary text-center p-15 py-50\">\n                        <div className=\"mb-25\">\n                           <img alt=\"card\" src={require(\"../../../../assets/images/card.png\").default} />\n                        </div>\n                        <h4>Apply for card offers</h4>\n                     </div>\n                     <Divider />\n                     <div className=\"py-60 iron-card-radio text-center\">\n                        {offerCoupons.map((offerCoupon, key) => {\n                           return (\n                              <div key={key} className=\"card-list pr-15 py-20 m-15\">\n                                 <div className=\"d-flex justify-content-start align-items-center\">\n                                    <Radio\n                                       checked={this.state.selected === offerCoupon.cardValue}\n                                       onChange={this.onRadioChange}\n                                       value={offerCoupon.cardValue}\n                                       name=\"radio-button-demo\"\n                                       aria-label={offerCoupon.offerLabel}\n                                       color=\"secondary\"\n                                    />\n                                    <div className=\"text-center\">\n                                       <span className=\"font-bold\"> {offerCoupon.couponName}</span>\n                                       <p className=\"mb-0\">{offerCoupon.cardType}</p>\n                                    </div>\n                                 </div>\n                              </div>\n                           )\n                        })}\n                     </div>\n                     <Divider />\n                     <div className=\"text-center\">\n                        <Grid container spacing={0}>\n                           <Grid item xs={12} sm={12} md={5} lg={3} className=\"mx-auto mb-15\">\n                              <h4 className=\"pt-40\">select offer name</h4>\n                              <form autoComplete=\"off\">\n                                 <FormControl className=\"iron-select-width\">\n                                    <InputLabel>select option</InputLabel>\n                                    <Select\n                                       value={this.state.age}\n                                       onChange={this.optionChange}\n                                       inputProps={{\n                                          name: 'age',\n                                       }}\n                                    >\n                                       <MenuItem value=\"\">\n                                          <em>None</em>\n                                       </MenuItem>\n                                       <MenuItem value={10}>option 1</MenuItem>\n                                       <MenuItem value={20}>option 2</MenuItem>\n                                       <MenuItem value={30}>option 3</MenuItem>\n                                    </Select>\n                                 </FormControl>\n                              </form>\n                           </Grid>\n                        </Grid>\n                     </div>\n                  </div>\n               </TabContainer>\n            </SwipeableViews>\n         </div>\n      );\n   }\n}\n\n\nexport default OffersCode;","import React, { Fragment } from 'react';\nimport { Accordion, AccordionSummary, AccordionDetails   } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Link } from 'react-router-dom';\n\n//connect to store\nimport { connect } from 'react-redux';\n\n//component\nimport AddressForm from './components/AddressForm';\nimport PaymentTabs from './components/PaymentTabs';\nimport OffersCode from './components/OffersCode';\n\nimport PageTitle from '../../../components/widgets/PageTitle';\nimport ViewCartSlide from '../../../components/widgets/ViewCartSlide';\n\nclass PaymentOptions extends React.Component {\n\n   state = {\n      expanded: 'panel1',\n      stepOneFormValid: false\n   };\n\n   //define function for toggle accordion \n   handleChange = panel => (event, expanded) => {\n      this.setState({\n         expanded: expanded ? panel : false,\n      });\n   };\n\n   //define function for submit form and open disable accordion \n   handleSubmitFirstForm() {\n      this.setState({\n         expanded: 'panel2',\n         stepOneFormValid: true\n      });\n   }\n\n   openPanel() {\n      this.setState({\n         expanded: 'panel3',\n         stepOneFormValid: true\n      });\n   }\n\n   render() {\n      const { expanded } = this.state;\n      const { cart } = this.props;\n      return (\n         <div className=\"payment-option-wrapper\">\n            <PageTitle\n               title=\"payment information\"\n            />\n            {(cart && cart.length > 0) ?\n               (\n                  <Fragment>\n                     <div className=\"inner-container section-pad\">\n                        <div className=\"container\">\n                           <div className=\"view-cart text-right mb-50\">\n                              <ViewCartSlide />\n                           </div>\n                           <Accordion\n                              className=\"iron-payment-accordion\"\n                              expanded={expanded === 'panel1'}\n                              onChange={this.handleChange('panel1')}\n                           >\n                              <AccordionSummary\n                                 expandIcon={<ExpandMoreIcon />}\n                                 className=\"payment-title\"\n                              >\n                                 <h4 className=\"mb-0\">enter your shipping address</h4>\n                              </AccordionSummary>\n                              <AccordionDetails className=\"payment-detail\">\n                                 <div className=\"py-15 w-100\">\n                                    <AddressForm onSubmit={this.handleSubmitFirstForm.bind(this)} />\n                                 </div>\n                              </AccordionDetails>\n                           </Accordion>\n                           <Accordion\n                              disabled={!this.state.stepOneFormValid}\n                              className=\"iron-payment-accordion\"\n                              expanded={expanded === 'panel2'}\n                              onChange={this.handleChange('panel2')}\n                           >\n                              <AccordionSummary\n                                 expandIcon={<ExpandMoreIcon />}\n                                 className=\"payment-title\"\n                              >\n                                 <h4 className=\"mb-0\">Unlock Offers or Apply PromoCodes</h4>\n                              </AccordionSummary>\n                              <AccordionDetails className=\"d-block payment-detail\">\n                                 <div className=\"mb-20\">\n                                    <OffersCode open={() => this.openPanel()} />\n                                 </div>\n                              </AccordionDetails>\n                           </Accordion>\n                           <Accordion\n                              disabled={!this.state.stepOneFormValid}\n                              className=\"iron-payment-accordion\"\n                              expanded={expanded === 'panel3'}\n                              onChange={this.handleChange('panel3')}\n                           >\n                              <AccordionSummary\n                                 expandIcon={<ExpandMoreIcon />}\n                                 className=\"payment-title\"\n                              >\n                                 <h4 className=\"mb-0\">Payment Options</h4>\n                              </AccordionSummary>\n                              <AccordionDetails className=\"d-block payment-detail\">\n                                 <div className=\"mb-20\">\n                                    <PaymentTabs />\n                                 </div>\n                              </AccordionDetails>\n                           </Accordion>\n                        </div>\n                     </div>\n                  </Fragment>\n               )\n               :\n               (\n                  <div className=\"section-pad text-center\">\n                     <div className=\"mb-30\">\n                        <img src={require(\"../../../assets/images/empty-cart.png\").default} alt=\"shop-cart\" />\n                     </div>\n                     <h4>Your Shopping Bag is empty.</h4>\n                     <Link to='/shop' className=\"text-capitalize\">go for shopping</Link>\n                  </div>\n               )\n            }\n         </div>\n      )\n   }\n}\n\nconst mapStateToProps = ({ ecommerce }) => {\n   const { cart } = ecommerce;\n   return { cart };\n}\n\nexport default connect(mapStateToProps)(PaymentOptions);"],"sourceRoot":""}