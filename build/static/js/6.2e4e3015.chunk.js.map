{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","require","actions","init","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","style","className","makePropGetter","hooks","meta","userProps","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","Comp","console","flexRender","component","proto","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/6.2e4e3015.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}